services:
  postgres:
    image: 'postgres:17-alpine'
    container_name: postgres
    environment:
      - 'POSTGRES_DB=park_house'
      - 'POSTGRES_USER=park_admin'
      - 'POSTGRES_PASSWORD=no_secrets_among_devs'
    ports:
      - '6432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data

  postgres_keycloak:
    image: 'postgres:17-alpine'
    container_name: postgres_keycloak
    environment:
      - 'POSTGRES_DB=keycloak'
      - 'POSTGRES_USER=keycloak'
      - 'POSTGRES_PASSWORD=password'
    volumes:
      - postgres-keycloak-data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:26.1
    container_name: keycloak
    command:
      - start-dev
      - --import-realm
    ports:
      - "9080:8080"
    volumes:
      - ./keycloak/:/opt/keycloak/data/import/
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres_keycloak:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password

      KC_HTTP_PORT: 8080
      KC_HOSTNAME_URL: http://localhost:8080
      KC_HOSTNAME_ADMIN_URL: http://localhost:8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      KC_HTTP_RELATIVE_PATH: /
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: [ 'CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:8080/auth/health/live' ]
      interval: 5s
      timeout: 5s
      retries: 20
    depends_on:
      - postgres_keycloak

volumes:
  postgres-data:
  postgres-keycloak-data: