{
  "id" : "61a55d7c-91f3-4a87-9981-cb3200fa82b7",
  "realm" : "park-house",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 1800,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "007eea82-94fe-4494-bd96-f1cd47ef3f8d",
      "name" : "default-roles-park-house",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "61a55d7c-91f3-4a87-9981-cb3200fa82b7",
      "attributes" : { }
    }, {
      "id" : "a3451aae-ba43-4c71-b14d-d5e555e9803c",
      "name" : "parking_admin",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "61a55d7c-91f3-4a87-9981-cb3200fa82b7",
      "attributes" : { }
    }, {
      "id" : "2d6a696d-05e4-492c-ad1b-707fd5b3b3e4",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "61a55d7c-91f3-4a87-9981-cb3200fa82b7",
      "attributes" : { }
    }, {
      "id" : "69610dbb-776b-41ba-85e8-237035096608",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "61a55d7c-91f3-4a87-9981-cb3200fa82b7",
      "attributes" : { }
    }, {
      "id" : "a888b681-a25c-4cf1-b13c-1445e8dc5eb8",
      "name" : "gate_machine",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "61a55d7c-91f3-4a87-9981-cb3200fa82b7",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "3d62c742-cc42-4ea2-8a8e-dbe4b02cb9a4",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "69a9456d-c0e7-405f-b081-40ed60bda960",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "a87e726c-2681-413c-91e0-b70baf977601",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "7d83723e-68de-4383-af82-16daa84f5a7c",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "d374722c-3e5e-4505-a07b-45f78d03ad57",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "e67a2e59-b47e-4422-937c-c78817a29290",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "76331579-0b2a-48c3-a9dd-9efb7395cc45",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "de99acf2-9459-4d80-8fe1-c554a83970f1",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-events", "manage-realm", "view-users", "manage-identity-providers", "manage-users", "query-realms", "create-client", "view-identity-providers", "view-authorization", "manage-clients", "view-clients", "manage-authorization", "view-realm", "manage-events", "query-users", "query-clients", "impersonation", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "c61b0f44-847e-4288-9c92-ad6edcc7709d",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "77b67f60-5ce2-4f7e-9814-6a141b22e974",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "9e789632-adaa-4e48-92d2-e8d5bad02a54",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "6f2b8679-95d5-493d-80c5-33602607af06",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "ce548d16-2e17-477c-87e7-5fe4e2024447",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "8a567b09-e3c9-4640-ab31-b82e37ee2460",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "ba868593-66f7-4ada-bd90-9636cd0b2b34",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "12b4faa9-9cb2-4b94-9a75-e9150d647ffa",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "b51600b0-13d8-4555-8d00-1b1304fa4a81",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "af913f62-3316-4de3-a05c-4b242ac64d40",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      }, {
        "id" : "50e22cd3-9381-4e0d-8c32-9b7bac224fcb",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "park-house-client" : [ {
        "id" : "ab1b9f81-7e6e-44aa-9660-a14b7e08bd8d",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d289fd45-eefb-4d79-84fc-c5f41ade51a2",
        "attributes" : { }
      } ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "0b9bf5f7-3da1-4f7f-a786-e8c9ae151fee",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0cb54a42-542c-4ce1-8569-83007e77d5f4",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "43d49541-cad4-4aed-8eea-fb6fdc247188",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cc627694-d4a7-4bd0-9eef-744690b7532d",
        "attributes" : { }
      }, {
        "id" : "c3c620bb-537c-458b-8130-5e3efe343652",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cc627694-d4a7-4bd0-9eef-744690b7532d",
        "attributes" : { }
      }, {
        "id" : "3ba760d7-4e4f-4d82-b426-1d7cdc2a4433",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cc627694-d4a7-4bd0-9eef-744690b7532d",
        "attributes" : { }
      }, {
        "id" : "9e1b22d6-e8d1-4430-819a-693f8501fe55",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cc627694-d4a7-4bd0-9eef-744690b7532d",
        "attributes" : { }
      }, {
        "id" : "80f22024-5765-47c6-9381-cbe1c16c7d48",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "cc627694-d4a7-4bd0-9eef-744690b7532d",
        "attributes" : { }
      }, {
        "id" : "a60cca6c-801e-4b48-8ad6-d6bf5201eb66",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "cc627694-d4a7-4bd0-9eef-744690b7532d",
        "attributes" : { }
      }, {
        "id" : "100de8c5-c3df-4913-9c5d-7d09451e479b",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cc627694-d4a7-4bd0-9eef-744690b7532d",
        "attributes" : { }
      }, {
        "id" : "463613cc-b6b4-4e7c-987a-e891d42cd04c",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cc627694-d4a7-4bd0-9eef-744690b7532d",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "007eea82-94fe-4494-bd96-f1cd47ef3f8d",
    "name" : "default-roles-park-house",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "61a55d7c-91f3-4a87-9981-cb3200fa82b7"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "f1c5166c-cb4e-4f46-8726-c44407a7cd99",
    "username" : "gate_01",
    "firstName" : "gate",
    "lastName" : "01",
    "email" : "gate01@parkhouse.com",
    "emailVerified" : true,
    "createdTimestamp" : 1737636430608,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "f797f14a-a0a2-4ce3-b261-2ba2804ed616",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1737636470082,
      "secretData" : "{\"value\":\"MWzE4lqBNTd93zVxMy5rlF6Ve0VRlgTNzZ4wfrHp8jQ=\",\"salt\":\"yD341TfMiqNLa/FWzn2cig==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-park-house", "gate_machine" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "e6324b5b-7bb4-437e-a30e-866a54b6df81",
    "username" : "gate_02",
    "firstName" : "gate",
    "lastName" : "02",
    "email" : "gate02@parkhouse.com",
    "emailVerified" : true,
    "createdTimestamp" : 1737637646364,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "4e9334eb-e954-458f-8201-1c3f5904e919",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1737637671102,
      "secretData" : "{\"value\":\"JG4tcJQ2UZp9ntSA/Nl+is7tRXUxLrfYsPRtT8PPGwg=\",\"salt\":\"wYwALuxnCr75cE8Gay/2OQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-park-house", "gate_machine" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "f34da6c5-166f-474a-ad3c-bf351c95be4b",
    "username" : "park_admin",
    "firstName" : "park",
    "lastName" : "admin",
    "email" : "admin@parkhouse.com",
    "emailVerified" : true,
    "createdTimestamp" : 1737636346352,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "095f558d-1f57-4be3-adf5-c9686d26c845",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1737636367039,
      "secretData" : "{\"value\":\"+R0N3FhSFkRTBcYZAF5X5a/1K+JZRlLXU0j9lU2w2os=\",\"salt\":\"gBH8kS2ZUlM/apKvNd3Rdg==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-park-house", "parking_admin" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "47a92dd6-aa87-45a7-b595-7e3329698d78",
    "username" : "service-account-park-house-client",
    "emailVerified" : false,
    "createdTimestamp" : 1737635812240,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "park-house-client",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-park-house" ],
    "clientRoles" : {
      "park-house-client" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "cc627694-d4a7-4bd0-9eef-744690b7532d",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/park-house/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/park-house/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "7e6cde8c-b10e-45d2-b4d9-248f6e42f894",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/park-house/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/park-house/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "06de0410-001f-4b25-9197-877c6ecf1640",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "753e5ba7-67ef-45a9-beda-e690f5df35ff",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "0cb54a42-542c-4ce1-8569-83007e77d5f4",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "d289fd45-eefb-4d79-84fc-c5f41ade51a2",
    "clientId" : "park-house-client",
    "name" : "Park House",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "r3sGs9hPZctXTl3g8y6d9HHhcFCzxmR6",
    "redirectUris" : [ "/*" ],
    "webOrigins" : [ "/*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1737635812",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "c2f1a7b9-35be-45c9-b76e-7ca6475e7f90",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "29aa1d8a-02b2-41f2-82a2-116da4f86d1c",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/park-house/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/park-house/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "5ec7988d-4eb1-4107-9526-6475db3b6425",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "787beae1-3209-411f-9e27-0cdf45da6f06",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "3a0525a6-1e07-4dcb-8684-35cacae626bf",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "46caaff1-202a-4b20-8326-bc9859a7a83a",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "e3d4cac0-a2ca-4e0f-8821-857f9b935713",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "e49d34c4-3c19-40cd-8886-043bd6c01155",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "9c5ef621-c7d2-4090-b09b-86c5d16ec9ad",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "4a4ed8d1-d3f9-4c66-a82c-a88e317eafdf",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "15d971e0-ecfd-4eac-bef1-517ba02c17bb",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "b4b0cc86-64bb-4966-9937-b6bcd707cb17",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "08c88ae1-8391-43b9-b0f4-b389272b766d",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "f2b8c0cb-3e4b-4f38-a026-327dbe69aa3f",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "4b175f3f-068b-43b3-82ca-81584f14c348",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "b600a5c2-4695-4fab-9f9b-4f26c8108fac",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "75fe32b9-ca1a-4731-a4c3-66a95bb0f88e",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "a9deb743-b757-4b16-b70c-85a8e775a563",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "5648772c-4d49-4e43-9ee6-b13ed3d5a37a",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "939db27b-35ad-41f6-b43f-2a641de96b20",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "4e3a46df-7f54-4803-bdc8-08ce6c9c4d2a",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "d0d8e2e4-7a0b-4a74-8a02-9dab5872cf5b",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c05502a3-9152-4e11-9580-77d35d7c6ef9",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "d7428f2e-ddfe-4c50-9a4e-8597bf0c508f",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "4fc5e95b-fc0b-4f9b-834b-a8492be937a0",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "8179e5ab-57ba-404d-9ba1-b24036765bea",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "ced115dd-a823-4363-ad4a-e8c06ca12576",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "af508c15-d7f5-4dc7-9428-7045f71409a4",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "47a18830-760c-4d36-a087-e8a207fb7761",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "8e6406fc-4cbf-4b59-b44c-8f6fcd9f664d",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1797a130-6d01-4e5e-b172-021e4369aaac",
    "name" : "service_account",
    "description" : "Specific scope for a client enabled for service accounts",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "d1d97922-821f-43d4-a11a-1d1502e4b7b2",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c0e2651c-ed9d-4c9e-a4ce-7aeceb9047c6",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a4b99b70-5c74-41e2-a319-d6fa5012fab0",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "3babe1e7-1c14-4f7f-97c7-0412e0b384ae",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "ecd14334-edda-45ff-8265-86d9e9d721e9",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c3289ef8-eb4a-4e82-ba0c-c58af32e650e",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2f3ac625-c3d7-44bd-a295-6728fddf428e",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9d579f8f-4c8e-4198-a997-2928592b4dac",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3fddea0e-49c6-476e-b240-a1cc5980bb69",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8b62ae8a-32db-4b24-a3e5-69e1cc515c9b",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0c3f8220-59ae-4797-a309-35c2fe7864ae",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "69e7150d-5ac1-4fda-b06e-2a3a7a794567",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "244d6be6-591a-48f0-98ac-c4c2a033a258",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7858759c-23dd-4803-b4f2-d16c583dfadf",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e67cd46f-3327-413a-9276-442f190da498",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "760a65d2-fa93-4733-8dad-33856c78560e",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "42ffda42-25ba-4755-a467-e675c87724c8",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "42b41f49-4241-4d8b-ba87-e15733529204",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "878f81ea-8c9f-4703-b918-d935e582d61a",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "0f2b75ad-6104-4b98-bc95-c1ee4e5b6b9d",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "7b3ec376-f2bc-4907-873e-ef0349b372bc",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "e5fae860-dd04-4c5c-811d-b5997e3eea66",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper" ]
      }
    }, {
      "id" : "79062059-5bed-49b2-b14a-406c7edfe4f0",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper" ]
      }
    }, {
      "id" : "6cff3225-0d9d-4fac-85fb-5e5aeec01c91",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "4ff538e4-0ba2-41c0-8c63-fef3cc004f60",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "4f15e9b1-d992-42fc-a77a-4af5691f95aa",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "e0e32026-d7b1-49f1-b73a-f5caa0dd61d9",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "69ce6476-b99b-4e99-96ce-ba0f481f0ac2",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "a3d70b2a-8273-481c-8345-e076b557fc2a",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAr2n2IXAb5jUVyPfs0uiGg0S2vjNtrFMxt+b1ckRPLW8toIYpWWK0DYXXUR4kP5Wv58CirrC9POcA20+FCWjx5/xw37WMqZ+9WLA6KGYujQu+uVdOkYdFJMbrZEJqwQ4WZHg45I9TKhEsnCmt4dRuyDY7d5xsuD+cjUI6cjOkGDuQtwXlHSTyujrpwNobP4o1QbZpNSIRBKLl0Q4LL3XuqJ2ybnH8u2R8Td0pE5REH1Whd14wV7EAyzOfiAHHwaJDgvVmQp3k5XjvlIE7wnz7KLSZPa+pNhWozc8YIGgBpV71kFByZD6NFm2ki+UfBKC4xCe1qR2gtbh5cpBp8iJ2ewIDAQABAoIBABwRlGPLs33V7xX47L7fnAKY9gr1DMQfOIdJCuvNbW6uPyVUF9K982TEjsHj/6s4XGz09giGWcmghz0QpOTuvjgVEh9h8XpaXWs5y8dCI98doC0P1jp9jugFzTh+U48ac3qBLaK5InbKnRJMrbkYtooNT4e3Z+2K/uswS/eRNt1KNWMoNTt60rj/RtYhh39Wnt3RO1QZq8gThFrXHnTHCdMuObqN0LDmmpAQr3bialCaMUf09V/Bx/LkqSahx4115rel32YkTLQ9gjEDifSgajrH1wwuZwItUWU3b3TCcM9BfdtOCvE2q+FkzpH8J8qr7XBh3Zn/oIpas4tpVktb71UCgYEA5XwJKjyEPX8d5bA3JZxA0gWQQxScM/7qEQNybD1E0IBVSNLctXd4IBC8KcgDPr11PWwy2Bm9nbcqwxvVQZehFS7RnWqZubwrrRf/e5+G2atwg/J+Ks2R+6JDDyM2Do4gzBO858bSgDh3HjuM7g13Dx5OqsuNbJyRdvnHecM3WB8CgYEAw66PuyIdT9NaHSujl1GgikEZHRlPLib3osE6UTnq0GaztjI/A56jOWIR2myDSN8qJSGiYjiXuYcOHuJPslbOFljgo69bqMpYAKGtC5F99dQatKj3rry1w10KoRe9u4mYcxWWHnYc1BBV80m/dB0b9xDMtf94LXFGuxsd1zauBiUCgYBj2SMXuHsFUuDMRm7IM4NUnk0VkssgKILpYimQBNyDJ8NzyyNy5Ydj1EQ6nacjzkVLs18v/YsuKzs051BTmMjisZtMtcwrLz+FsdJclJ2U6e4ryv+wWf9xkDlDRdvIW3jTsqbX5f9DAM57XgfEsCEkd9hcofJn1nvIW4e6aAEVmwKBgQCnUc3or0TtCsWVB8l8C/n//aXhsdB4oC1C54JcDe/wfsDP26ryB2V+HZMyd3LSjq/UzCuzXLyvkQHL+qs2zO6vQRPkIn93ln0lHRmAOMnBt7mWHJyctxOclyQNluVPRFosnZqdNVV1Jvq3aqngOTu+SIkiXe1+vctDFe6wJTssWQKBgQDMSDqMLTNNIrOrwsBp3LBEneTrsVQ1W6Up9u/3vD+dONQRMygysxRZgrrkQcMKRQO4hv7VidkbH2fcKlV9Dj7xryY/rNl7dcgkptqVQQK550UJSqlg70/YLA0jGyxk39g0AL67Rzc5YZSKegaicJ67MhTGnXQbdq3SOvVAzVwqdA==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICozCCAYsCBgGUkyfIRjANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDApwYXJrLWhvdXNlMB4XDTI1MDEyMzEyMzIyNVoXDTM1MDEyMzEyMzQwNVowFTETMBEGA1UEAwwKcGFyay1ob3VzZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK9p9iFwG+Y1Fcj37NLohoNEtr4zbaxTMbfm9XJETy1vLaCGKVlitA2F11EeJD+Vr+fAoq6wvTznANtPhQlo8ef8cN+1jKmfvViwOihmLo0LvrlXTpGHRSTG62RCasEOFmR4OOSPUyoRLJwpreHUbsg2O3ecbLg/nI1COnIzpBg7kLcF5R0k8ro66cDaGz+KNUG2aTUiEQSi5dEOCy917qidsm5x/LtkfE3dKROURB9VoXdeMFexAMszn4gBx8GiQ4L1ZkKd5OV475SBO8J8+yi0mT2vqTYVqM3PGCBoAaVe9ZBQcmQ+jRZtpIvlHwSguMQntakdoLW4eXKQafIidnsCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAaVVlUbccVWrtpjLhUVN/J+TLiDDRxOZOJDJHsr9toRjSxcVCb1fQNUEP7NKumXuVthlth3lQFQMA4Xudc029t5bPc3yw4ZJhSpRK0YdGErBru1a7qgI6Yg/BPcwEVgx+sx601z8+UYQwgVHGIOhUoFaIElQjHpynU3VSGjMvh8O1SwFt9f2t29UrCk65Yg6OYfddHXiey/yrxzeD5B/HGkLVMi3/NwCDmtK1az9CuIYFL9TFHrnko4v9Fgleu2Vm3qiEjCOJuknCAnckOD/rvfOHGkKjz8C79KTZV0SXZx3Z4qriiJCwRCRosYZDNpmGQfvBSq0h2OmjBHRbZdTFIA==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "4ed511e3-2eee-4ed1-8d51-2e4a605f90da",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "25605333-97a2-41ee-b556-8ce6ad6319c5" ],
        "secret" : [ "lO9iFmEViYGPylzOwMAdig" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "eb33e7ae-748f-4b2b-b009-a2f4180c7c92",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEApMCyEB0gTL/cYOFTGwC+tEQQmQzlTkSNciBZ2SneK/JUvc8A9VTBdNlybEmFXqyS0dxY5PGPBXF1txNcTMPAv9tT/N3PnnjwsVNKpuAB91IGELslpkJfqDeFAwBqZTQvIFAmBUmcynMU64pYECvN3A8TcBjtHn84T2JGLizECq7olS7supJEokbtqWzp/SnxIZ6glx+69e/qbrIGJ6hS7BFYQI7+Pkkx0D5Gw2FUtAPCWWb0LdJOLcgfVXb+FT2Ld9xmpVhEAQ6K4ER7KQ1p41sq7BDUuW8WmcsjPFG5oqt79WfiKOhRl/spe9e+nFd3OEZSM++fFGEyECGuTCZ9tQIDAQABAoIBAAmmZRz0gnPRuRgjmo6LrfU5F2UfkD7UB8TriC0O0BNFj8PJCtv+fuZX5jqELpUBCV3UHjuAD/SC/3YduDD24PoGisDWQoGca9y3GDmgsqdzMnprESV6ix0l7gXi/Fhj2hl2ba5Zmslw5tofsaYg1V9SXWfEzf6/TOO5dIrigbPDuuS/fBYWXjpOL17/yYFA7MZ8X/BEFI/Ldwvsn0cTxAFdLjPIB400BOj682AYY5tIa4qCrVNUTmDtCYUexrUjzcCpGHOoLY5VtekLMthxlPfcs0XgeOlO4VEGysSzA6DmdXwZ3jst08A542j+B6+kELw2MmioisWZXhuZUTgZVHECgYEAzo0sMJHR1Zp/dPpYIQqbpbsnkkS1pEUVOfjxol7OfNQbU/IKPjD6UQbvy8M/PV4Ko07KTd2IXiNkVxY0ezgEQao4iXU3q6TGFZV550kEpAfskNcRjVWC5kcVaxbTOZBb8FtjX3LDuSBobB1ZvFq+Op8r4BTgL6O0lZWpMxwJ+Q8CgYEAzDHSfB78E+5/mfMpM+/+MrhIkStJ2DBGRUNx7UZKpdLhU9NkyJhRfl/bZQMVTnzrD7rKuJYSKPS7eMlr3tAS8uXQbXRgLkoaeGYEBvYO0G5k4N49VjXJg0qcZA/yEvkB2SWTbU0JMNPZ/Rw9aGcM5XAuuPpRRiCjHcrNs2Ez9PsCgYEAkKY89CaqlLSF3h4T6c/MANx4ce68ZjYbD2ZPki5i3PiNytQOaE9Ufbol5MTvXMKnIIblFnK2NXcDphle14v7LyFORrVYL1RNhIARxu9T2KvT9/slx5zC9xGA5mYttnpqaIEXrphoiRUxC8XiOg4yektOJrd36OT0am1M+QYB1fECgYB0kkTdwzqZjmCeXOk601nFTttutM3Vc8nKJPTXRne7LyagGmDA++QaR1MS2a3CPyJauoKc2l/Hrd+Q1zyT2SnYLUbOFdAK3Rc7gNHvv205pKxGi9lsbAx8vY2GumuyVSGu+/qsPXxvuaILE6IjBiGgomiqBY18gYldqrfAHk/xHQKBgGB+Jo+L26XCJKiW+7Yjk99xrmutNIH/vzlZTuxkJESPlnflCIbvGrDYMuzX/f4Q+j+mzfS2Qea87cgeZqBglKNm6NxPcpP16Ob06atKIK58OBTHQr1UXez5mht3Jdt+nzay2lThKRMm4NCE/SN3Vuxky0ir86kn1h5KNio4mG8Z" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICozCCAYsCBgGUkyfHzjANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDApwYXJrLWhvdXNlMB4XDTI1MDEyMzEyMzIyNVoXDTM1MDEyMzEyMzQwNVowFTETMBEGA1UEAwwKcGFyay1ob3VzZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKTAshAdIEy/3GDhUxsAvrREEJkM5U5EjXIgWdkp3ivyVL3PAPVUwXTZcmxJhV6sktHcWOTxjwVxdbcTXEzDwL/bU/zdz5548LFTSqbgAfdSBhC7JaZCX6g3hQMAamU0LyBQJgVJnMpzFOuKWBArzdwPE3AY7R5/OE9iRi4sxAqu6JUu7LqSRKJG7als6f0p8SGeoJcfuvXv6m6yBieoUuwRWECO/j5JMdA+RsNhVLQDwllm9C3STi3IH1V2/hU9i3fcZqVYRAEOiuBEeykNaeNbKuwQ1LlvFpnLIzxRuaKre/Vn4ijoUZf7KXvXvpxXdzhGUjPvnxRhMhAhrkwmfbUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEALOLqk1F+RZPzOqxtaEhY1mnzgIu13JU3tGrF2sbfxz4FcnnPqUG03TcH7UgaHlDdzm9MPJIJKXQCwSTFs45CeXWrbG4PNCrQQeC0GY33daVeFC7xvkWmPeRSzBToMs6joZ/4E7WLg3dsLDYcTIh8oKACCvkKQrrPJmqcBzfxTUwayDh5aFDTm+KrNKpiOCrGM1lybm6VuY/1pWRquJCx85AWAERuGyEGo80pRP+QsKYKLkzlDs6EnTZjxcTRPges1hhD2aKJ7EjI2av+zeg8OU3zUUThuBzb3ooUyyERCJWH9PATcPs5fWeCtgkSBdOnvWVxVrqg1lQQkl+PArZKiQ==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "e82bf06b-1008-4d93-9b6f-ce755e39ea7d",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "4e3935d6-ecf0-44b9-aadd-268e60ae245a" ],
        "secret" : [ "-dPEakjT-jJN2-J8zsWDdW7yj_3E_Xq1D2Vg-D87rqcD6nU5wHH5QfKQW3PJX8M8AYOzvRvYtHuFJkJQgRp0tdMhKX-v5m5tXH-V4rVZbr47c9kizTF_ajvxD_V5oK7Rvfxu3Nz3v5iOkoMIQ1V5b5TzTEp-nLfvnf1bm9kuN04" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "3c9b66e4-4ecf-4034-b9bf-2f318d7993a2",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "056ce900-0453-47d0-85d1-84ad0979955a",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c528b75d-6118-4786-8293-e7e1bf780cab",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1728bf96-16c3-4504-96f5-82e76edf2932",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f6d1ec69-07bf-46b6-962f-dc9b8a7824a8",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f5b8983c-55d1-4a99-aace-7b8d38013cb2",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1b03fb1c-2543-4d38-bc04-7089e3a50fab",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6e3a7ad0-362c-465c-a40f-b69e7eddb9f0",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3a991a52-da7e-4bdb-9c5b-4bafdb8505a1",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "58702648-3b1b-4269-928a-97667e714626",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "dae89bd7-146a-47f6-97c3-de70237392f1",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "df0deee1-95b6-4572-b31f-ce808aaf5042",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "755f8bbb-0398-426d-8dd6-c013bda41aff",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "825f4f66-4035-4a61-91cc-15b5d7c84e76",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "51dbde70-5202-4534-9e30-2021264be2fa",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6438f561-31ce-482b-9f99-5842a1b181ab",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 50,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b1bf16e0-a544-4a4a-b666-4319cbb65cd4",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b8e5e7dd-4079-4311-983e-d6ebcb06e696",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4c0f9ed1-84db-4674-9d8f-948c7d9d2f2c",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "50b4f1fb-618b-431a-aa68-1f64563e2b34",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "90991f72-0545-4917-8901-5029da4da170",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "db3dae24-c405-413c-a35d-41811ca7fd2d",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "b75d0adc-dfe8-452f-8d05-8638195e708f",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "26.1.0",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "verifiableCredentialsEnabled" : false,
  "adminPermissionsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}